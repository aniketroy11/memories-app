{"ast":null,"code":"import { CREATE, DELETE, FETCH_ALL, UPDATE, LIKE } from '../constants/actionTypes';\nimport * as api from '../api';\n\n// actions creators\nexport const getPosts = () => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.fetchPosts();\n    dispatch({\n      type: FETCH_ALL,\n      payload: data\n    });\n  } catch (error) {\n    console.log(error.message);\n  }\n};\nexport const getPostsBySearch = searchQuery => async dispatch => {\n  try {\n    const {\n      data: {\n        data\n      }\n    } = await api.fetchPostsBySearch(searchQuery);\n    console.log(data);\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const createPost = post => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.createPost(post);\n    dispatch({\n      type: CREATE,\n      payload: data\n    });\n  } catch (error) {\n    console.log(error.message);\n  }\n};\nexport const updatePost = (id, post) => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.updatePost(id, post);\n    dispatch({\n      type: UPDATE,\n      payload: data\n    });\n  } catch (error) {\n    console.log(error.message);\n  }\n};\nexport const deletePost = id => async dispatch => {\n  try {\n    await api.deletePost(id);\n    dispatch({\n      type: DELETE,\n      payload: id\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const likePost = id => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.likePost(id);\n    dispatch({\n      type: LIKE,\n      payload: data\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};","map":{"version":3,"names":["CREATE","DELETE","FETCH_ALL","UPDATE","LIKE","api","getPosts","dispatch","data","fetchPosts","type","payload","error","console","log","message","getPostsBySearch","searchQuery","fetchPostsBySearch","createPost","post","updatePost","id","deletePost","likePost"],"sources":["C:/Users/devil/OneDrive/Desktop/Memories app/client/src/actions/posts.js"],"sourcesContent":["import {CREATE , DELETE , FETCH_ALL , UPDATE,LIKE} from '../constants/actionTypes';\r\n\r\nimport * as api from '../api';\r\n\r\n\r\n\r\n// actions creators\r\nexport const getPosts =()=>async(dispatch)=>{\r\n    try{\r\n        const {data} = await api.fetchPosts(); \r\n        \r\n        dispatch({type:FETCH_ALL,payload:data});\r\n    }catch(error){\r\n        console.log(error.message);\r\n    }\r\n}\r\n\r\nexport const getPostsBySearch =(searchQuery)=>async(dispatch)=>{\r\n    try {\r\n        const {data : {data} } = await api.fetchPostsBySearch(searchQuery);\r\n        console.log(data);\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nexport const createPost=(post)=>async(dispatch)=>{\r\n    try{\r\n            const {data} = await api.createPost(post);\r\n            dispatch({type:CREATE,payload:data});\r\n    }catch(error){\r\n            console.log(error.message);\r\n    }\r\n}\r\n\r\nexport const updatePost=(id,post)=>async(dispatch)=>{\r\n    try{\r\n        const {data} = await api.updatePost(id,post);\r\n        dispatch({type:UPDATE,payload:data})\r\n    }catch(error){\r\n        console.log(error.message);\r\n    }\r\n}\r\n\r\nexport const deletePost=(id)=> async (dispatch) =>                         {\r\n    try{\r\n        await api.deletePost(id);\r\n        dispatch({type:DELETE,payload:id});\r\n    }catch(error){\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nexport const likePost =(id)=>async(dispatch)=>{\r\n    try {\r\n        const {data} = await api.likePost(id);\r\n        dispatch({type:LIKE,payload:data});\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}"],"mappings":"AAAA,SAAQA,MAAM,EAAGC,MAAM,EAAGC,SAAS,EAAGC,MAAM,EAACC,IAAI,QAAO,0BAA0B;AAElF,OAAO,KAAKC,GAAG,MAAM,QAAQ;;AAI7B;AACA,OAAO,MAAMC,QAAQ,GAAEA,CAAA,KAAI,MAAMC,QAAQ,IAAG;EACxC,IAAG;IACC,MAAM;MAACC;IAAI,CAAC,GAAG,MAAMH,GAAG,CAACI,UAAU,EAAE;IAErCF,QAAQ,CAAC;MAACG,IAAI,EAACR,SAAS;MAACS,OAAO,EAACH;IAAI,CAAC,CAAC;EAC3C,CAAC,QAAMI,KAAK,EAAC;IACTC,OAAO,CAACC,GAAG,CAACF,KAAK,CAACG,OAAO,CAAC;EAC9B;AACJ,CAAC;AAED,OAAO,MAAMC,gBAAgB,GAAGC,WAAW,IAAG,MAAMV,QAAQ,IAAG;EAC3D,IAAI;IACA,MAAM;MAACC,IAAI,EAAG;QAACA;MAAI;IAAE,CAAC,GAAG,MAAMH,GAAG,CAACa,kBAAkB,CAACD,WAAW,CAAC;IAClEJ,OAAO,CAACC,GAAG,CAACN,IAAI,CAAC;EACrB,CAAC,CAAC,OAAOI,KAAK,EAAE;IACZC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;EACtB;AACJ,CAAC;AAED,OAAO,MAAMO,UAAU,GAAEC,IAAI,IAAG,MAAMb,QAAQ,IAAG;EAC7C,IAAG;IACK,MAAM;MAACC;IAAI,CAAC,GAAG,MAAMH,GAAG,CAACc,UAAU,CAACC,IAAI,CAAC;IACzCb,QAAQ,CAAC;MAACG,IAAI,EAACV,MAAM;MAACW,OAAO,EAACH;IAAI,CAAC,CAAC;EAC5C,CAAC,QAAMI,KAAK,EAAC;IACLC,OAAO,CAACC,GAAG,CAACF,KAAK,CAACG,OAAO,CAAC;EAClC;AACJ,CAAC;AAED,OAAO,MAAMM,UAAU,GAACA,CAACC,EAAE,EAACF,IAAI,KAAG,MAAMb,QAAQ,IAAG;EAChD,IAAG;IACC,MAAM;MAACC;IAAI,CAAC,GAAG,MAAMH,GAAG,CAACgB,UAAU,CAACC,EAAE,EAACF,IAAI,CAAC;IAC5Cb,QAAQ,CAAC;MAACG,IAAI,EAACP,MAAM;MAACQ,OAAO,EAACH;IAAI,CAAC,CAAC;EACxC,CAAC,QAAMI,KAAK,EAAC;IACTC,OAAO,CAACC,GAAG,CAACF,KAAK,CAACG,OAAO,CAAC;EAC9B;AACJ,CAAC;AAED,OAAO,MAAMQ,UAAU,GAAED,EAAE,IAAI,MAAOf,QAAQ,IAA6B;EACvE,IAAG;IACC,MAAMF,GAAG,CAACkB,UAAU,CAACD,EAAE,CAAC;IACxBf,QAAQ,CAAC;MAACG,IAAI,EAACT,MAAM;MAACU,OAAO,EAACW;IAAE,CAAC,CAAC;EACtC,CAAC,QAAMV,KAAK,EAAC;IACTC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;EACtB;AACJ,CAAC;AAED,OAAO,MAAMY,QAAQ,GAAGF,EAAE,IAAG,MAAMf,QAAQ,IAAG;EAC1C,IAAI;IACA,MAAM;MAACC;IAAI,CAAC,GAAG,MAAMH,GAAG,CAACmB,QAAQ,CAACF,EAAE,CAAC;IACrCf,QAAQ,CAAC;MAACG,IAAI,EAACN,IAAI;MAACO,OAAO,EAACH;IAAI,CAAC,CAAC;EACtC,CAAC,CAAC,OAAOI,KAAK,EAAE;IACZC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;EACtB;AACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}